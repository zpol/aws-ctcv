US East (Ohio)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
US East (N. Virginia)
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
US West (N. California)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[EKS.1] EKS cluster endpoints should not be publicly accessible
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
US West (Oregon)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Africa (Cape Town)
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.12] Unused Amazon EC2 EIPs should be removed
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[GuardDuty.1] GuardDuty should be enabled
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Asia Pacific (Hong Kong)
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Asia Pacific (Hyderabad)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.1] Auto Scaling groups associated with a Classic Load Balancer should use load balancer health checks
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudTrail.6] Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible
[CloudTrail.7] Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.1] DynamoDB tables should automatically scale capacity with demand
[DynamoDB.2] DynamoDB tables should have point-in-time recovery enabled
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.2] The VPC default security group should not allow inbound and outbound traffic
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.6] VPC flow logging should be enabled in all VPCs
[EC2.7] EBS default encryption should be enabled
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.9] Amazon EC2 instances should not have a public IPv4 address
[EC2.10] Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.3] Classic Load Balancer listeners should be configured with HTTPS or TLS termination
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.5] Application and Classic Load Balancers logging should be enabled
[ELB.6] Application Load Balancer deletion protection should be enabled
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.9] Classic Load Balancers should have cross-zone load balancing enabled
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.1] IAM policies should not allow full "*" administrative privileges
[IAM.2] IAM users should not have IAM policies attached
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.4] IAM root user access key should not exist
[IAM.5] MFA should be enabled for all IAM users that have a console password
[IAM.8] Unused IAM user credentials should be removed
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.19] MFA should be enabled for all IAM users
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[IAM.22] IAM user credentials unused for 45 days should be removed
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[KMS.4] AWS KMS key rotation should be enabled
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.1] Lambda function policies should prohibit public access
[Lambda.2] Lambda functions should use supported runtimes
[Lambda.3] Lambda functions should be in a VPC
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.2] RDS DB Instances should prohibit public access, as determined by the PubliclyAccessible AWS Configuration
[RDS.3] RDS DB instances should have encryption at-rest enabled
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.5] RDS DB instances should be configured with multiple Availability Zones
[RDS.6] Enhanced monitoring should be configured for RDS DB instances
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.11] RDS instances should have automatic backups enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.1] Amazon Redshift clusters should prohibit public access
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.6] Amazon Redshift should have automatic upgrades to major versions enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.2] S3 buckets should prohibit public read access
[S3.3] S3 buckets should prohibit public write access
[S3.4] S3 buckets should have server-side encryption enabled
[S3.5] S3 buckets should require requests to use Secure Socket Layer
[S3.6] S3 permissions granted to other AWS accounts in bucket policies should be restricted
[S3.7] S3 buckets should have cross-Region replication enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.9] S3 bucket server access logging should be enabled
[S3.15] S3 buckets should be configured to use Object Lock
[S3.17] S3 buckets should be encrypted at rest with AWS KMS keys
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Asia Pacific (Jakarta)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.3] Auto Scaling group launch configurations should configure EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)
[AutoScaling.4] Auto Scaling group launch configuration should not have a metadata response hop limit greater than 1
[AutoScaling.6] Auto Scaling groups should use multiple instance types in multiple Availability Zones
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[AutoScaling.9] Amazon EC2 Auto Scaling groups should use Amazon EC2 launch templates
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CloudWatch.17] CloudWatch alarm actions should be activated
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.2] DynamoDB tables should have point-in-time recovery enabled
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.2] The VPC default security group should not allow inbound and outbound traffic
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.6] VPC flow logging should be enabled in all VPCs
[EC2.7] EBS default encryption should be enabled
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.9] Amazon EC2 instances should not have a public IPv4 address
[EC2.10] Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.2] ECS services should not have public IP addresses assigned to them automatically
[ECS.3] ECS task definitions should not share the host's process namespace
[ECS.4] ECS containers should run as non-privileged
[ECS.5] ECS containers should be limited to read-only access to root filesystems
[ECS.8] Secrets should not be passed as container environment variables
[ECS.10] ECS Fargate services should run on the latest Fargate platform version
[ECS.12] ECS clusters should use Container Insights
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.3] Classic Load Balancer listeners should be configured with HTTPS or TLS termination
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.6] Application Load Balancer deletion protection should be enabled
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.9] Classic Load Balancers should have cross-zone load balancing enabled
[ELB.12] Application Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[GuardDuty.1] GuardDuty should be enabled
[IAM.4] IAM root user access key should not exist
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.3] Lambda functions should be in a VPC
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.6] Enhanced monitoring should be configured for RDS DB instances
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[Redshift.1] Amazon Redshift clusters should prohibit public access
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.9] Redshift clusters should not use the default database name
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.11] S3 buckets should have event notifications enabled
[S3.13] S3 buckets should have lifecycle policies configured
[S3.15] S3 buckets should be configured to use Object Lock
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.1] Secrets Manager secrets should have automatic rotation enabled
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[SecretsManager.3] Remove unused Secrets Manager secrets
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Asia Pacific (Mumbai)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Asia Pacific (Melbourne)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.1] Auto Scaling groups associated with a Classic Load Balancer should use load balancer health checks
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.9] Amazon EC2 instances should not have a public IPv4 address
[ECR.1] ECR private repositories should have image scanning configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.5] Application and Classic Load Balancers logging should be enabled
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[IAM.1] IAM policies should not allow full "*" administrative privileges
[IAM.2] IAM users should not have IAM policies attached
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.5] MFA should be enabled for all IAM users that have a console password
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.7] Password policies for IAM users should have strong AWS Configurations
[IAM.8] Unused IAM user credentials should be removed
[IAM.10] Password policies for IAM users should have strong AWS Configurations
[IAM.11] Ensure IAM password policy requires at least one uppercase letter
[IAM.12] Ensure IAM password policy requires at least one lowercase letter
[IAM.13] Ensure IAM password policy requires at least one symbol
[IAM.14] Ensure IAM password policy requires at least one number
[IAM.15] Ensure IAM password policy requires minimum password length of 14 or greater
[IAM.16] Ensure IAM password policy prevents password reuse
[IAM.17] Ensure IAM password policy expires passwords within 90 days or less
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.19] MFA should be enabled for all IAM users
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[IAM.22] IAM user credentials unused for 45 days should be removed
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.2] RDS DB Instances should prohibit public access, as determined by the PubliclyAccessible AWS Configuration
[RDS.3] RDS DB instances should have encryption at-rest enabled
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.1] Amazon Redshift clusters should prohibit public access
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.6] Amazon Redshift should have automatic upgrades to major versions enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.6] S3 permissions granted to other AWS accounts in bucket policies should be restricted
[S3.14] S3 buckets should use versioning
[S3.15] S3 buckets should be configured to use Object Lock
[S3.17] S3 buckets should be encrypted at rest with AWS KMS keys
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SSM.4] SSM documents should not be public
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Asia Pacific (Osaka)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.2] DynamoDB tables should have point-in-time recovery enabled
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.7] EBS default encryption should be enabled
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.9] Amazon EC2 instances should not have a public IPv4 address
[EC2.10] Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[ECS.2] ECS services should not have public IP addresses assigned to them automatically
[ECS.3] ECS task definitions should not share the host's process namespace
[ECS.4] ECS containers should run as non-privileged
[ECS.8] Secrets should not be passed as container environment variables
[ECS.10] ECS Fargate services should run on the latest Fargate platform version
[ECS.12] ECS clusters should use Container Insights
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.3] Classic Load Balancer listeners should be configured with HTTPS or TLS termination
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.6] Application Load Balancer deletion protection should be enabled
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.9] Classic Load Balancers should have cross-zone load balancing enabled
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.4] IAM root user access key should not exist
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[KMS.3] AWS KMS keys should not be deleted unintentionally
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.1] Lambda function policies should prohibit public access
[Lambda.2] Lambda functions should use supported runtimes
[Lambda.3] Lambda functions should be in a VPC
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.6] Enhanced monitoring should be configured for RDS DB instances
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.26] RDS DB instances should be covered by a backup plan
[Redshift.1] Amazon Redshift clusters should prohibit public access
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.15] S3 buckets should be configured to use Object Lock
[S3.17] S3 buckets should be encrypted at rest with AWS KMS keys
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SecretsManager.1] Secrets Manager secrets should have automatic rotation enabled
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Asia Pacific (Seoul)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Asia Pacific (Singapore)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Asia Pacific (Sydney)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Asia Pacific (Tokyo)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Canada (Central)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
China (Beijing)
[Account.1] Security contact information should be provided for an AWS account.
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.2] Amazon EC2 Auto Scaling group should cover multiple Availability Zones
[AutoScaling.3] Auto Scaling group launch configurations should configure EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)
[AutoScaling.4] Auto Scaling group launch configuration should not have a metadata response hop limit greater than 1
[AutoScaling.6] Auto Scaling groups should use multiple instance types in multiple Availability Zones
[AutoScaling.9] Amazon EC2 Auto Scaling groups should use Amazon EC2 launch templates
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CloudWatch.17] CloudWatch alarm actions should be activated
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[ECS.3] ECS task definitions should not share the host's process namespace
[ECS.4] ECS containers should run as non-privileged
[ECS.5] ECS containers should be limited to read-only access to root filesystems
[ECS.8] Secrets should not be passed as container environment variables
[ECS.10] ECS Fargate services should run on the latest Fargate platform version
[ECS.12] ECS clusters should use Container Insights
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.10] Classic Load Balancer should span multiple Availability Zones
[ELB.12] Application Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.9] Virtual MFA should be enabled for the root user
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.25] RDS database instances should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.8] Amazon Redshift clusters should not use the default Admin username
[Redshift.9] Redshift clusters should not use the default database name
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.10] S3 buckets with versioning enabled should have lifecycle policies configured
[S3.11] S3 buckets should have event notifications enabled
[S3.12] S3 access control lists (ACLs) should not be used to manage user access to buckets
[S3.13] S3 buckets should have lifecycle policies configured
[S3.14] S3 buckets should use versioning
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
China (Ningxia)
[Account.1] Security contact information should be provided for an AWS account.
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.2] Amazon EC2 Auto Scaling group should cover multiple Availability Zones
[AutoScaling.3] Auto Scaling group launch configurations should configure EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)
[AutoScaling.4] Auto Scaling group launch configuration should not have a metadata response hop limit greater than 1
[AutoScaling.6] Auto Scaling groups should use multiple instance types in multiple Availability Zones
[AutoScaling.9] Amazon EC2 Auto Scaling groups should use Amazon EC2 launch templates
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CloudWatch.17] CloudWatch alarm actions should be activated
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[ECS.3] ECS task definitions should not share the host's process namespace
[ECS.4] ECS containers should run as non-privileged
[ECS.5] ECS containers should be limited to read-only access to root filesystems
[ECS.8] Secrets should not be passed as container environment variables
[ECS.10] ECS Fargate services should run on the latest Fargate platform version
[ECS.12] ECS clusters should use Container Insights
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.10] Classic Load Balancer should span multiple Availability Zones
[ELB.12] Application Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.9] Virtual MFA should be enabled for the root user
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.1] Lambda function policies should prohibit public access
[Lambda.2] Lambda functions should use supported runtimes
[Lambda.3] Lambda functions should be in a VPC
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.25] RDS database instances should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.8] Amazon Redshift clusters should not use the default Admin username
[Redshift.9] Redshift clusters should not use the default database name
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.10] S3 buckets with versioning enabled should have lifecycle policies configured
[S3.11] S3 buckets should have event notifications enabled
[S3.12] S3 access control lists (ACLs) should not be used to manage user access to buckets
[S3.13] S3 buckets should have lifecycle policies configured
[S3.14] S3 buckets should use versioning
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Europe (Frankfurt)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Europe (Ireland)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Europe (London)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Europe (Milan)
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[DMS.1] Database Migration Service replication instances should not be public
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.12] Unused Amazon EC2 EIPs should be removed
[ECS.12] ECS clusters should use Container Insights
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[GuardDuty.1] GuardDuty should be enabled
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[KMS.3] AWS KMS keys should not be deleted unintentionally
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.9] Database logging should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Europe (Paris)
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Europe (Spain)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.1] Auto Scaling groups associated with a Classic Load Balancer should use load balancer health checks
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudTrail.6] Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible
[CloudTrail.7] Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.1] DynamoDB tables should automatically scale capacity with demand
[DynamoDB.2] DynamoDB tables should have point-in-time recovery enabled
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.2] The VPC default security group should not allow inbound and outbound traffic
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.6] VPC flow logging should be enabled in all VPCs
[EC2.7] EBS default encryption should be enabled
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.9] Amazon EC2 instances should not have a public IPv4 address
[EC2.10] Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.3] Classic Load Balancer listeners should be configured with HTTPS or TLS termination
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.5] Application and Classic Load Balancers logging should be enabled
[ELB.6] Application Load Balancer deletion protection should be enabled
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.9] Classic Load Balancers should have cross-zone load balancing enabled
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.1] IAM policies should not allow full "*" administrative privileges
[IAM.2] IAM users should not have IAM policies attached
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.4] IAM root user access key should not exist
[IAM.5] MFA should be enabled for all IAM users that have a console password
[IAM.8] Unused IAM user credentials should be removed
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.19] MFA should be enabled for all IAM users
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[IAM.22] IAM user credentials unused for 45 days should be removed
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[KMS.4] AWS KMS key rotation should be enabled
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.1] Lambda function policies should prohibit public access
[Lambda.2] Lambda functions should use supported runtimes
[Lambda.3] Lambda functions should be in a VPC
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.2] RDS DB Instances should prohibit public access, as determined by the PubliclyAccessible AWS Configuration
[RDS.3] RDS DB instances should have encryption at-rest enabled
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.5] RDS DB instances should be configured with multiple Availability Zones
[RDS.6] Enhanced monitoring should be configured for RDS DB instances
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.11] RDS instances should have automatic backups enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.1] Amazon Redshift clusters should prohibit public access
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.6] Amazon Redshift should have automatic upgrades to major versions enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.2] S3 buckets should prohibit public read access
[S3.3] S3 buckets should prohibit public write access
[S3.4] S3 buckets should have server-side encryption enabled
[S3.5] S3 buckets should require requests to use Secure Socket Layer
[S3.6] S3 permissions granted to other AWS accounts in bucket policies should be restricted
[S3.7] S3 buckets should have cross-Region replication enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.9] S3 bucket server access logging should be enabled
[S3.15] S3 buckets should be configured to use Object Lock
[S3.17] S3 buckets should be encrypted at rest with AWS KMS keys
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Europe (Stockholm)
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Europe (Zurich)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.1] Auto Scaling groups associated with a Classic Load Balancer should use load balancer health checks
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudTrail.6] Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible
[CloudTrail.7] Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.1] DynamoDB tables should automatically scale capacity with demand
[DynamoDB.2] DynamoDB tables should have point-in-time recovery enabled
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.2] The VPC default security group should not allow inbound and outbound traffic
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.6] VPC flow logging should be enabled in all VPCs
[EC2.7] EBS default encryption should be enabled
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.9] Amazon EC2 instances should not have a public IPv4 address
[EC2.10] Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.3] Classic Load Balancer listeners should be configured with HTTPS or TLS termination
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.5] Application and Classic Load Balancers logging should be enabled
[ELB.6] Application Load Balancer deletion protection should be enabled
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.9] Classic Load Balancers should have cross-zone load balancing enabled
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.1] IAM policies should not allow full "*" administrative privileges
[IAM.2] IAM users should not have IAM policies attached
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.4] IAM root user access key should not exist
[IAM.5] MFA should be enabled for all IAM users that have a console password
[IAM.8] Unused IAM user credentials should be removed
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.19] MFA should be enabled for all IAM users
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[IAM.22] IAM user credentials unused for 45 days should be removed
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[KMS.4] AWS KMS key rotation should be enabled
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.1] Lambda function policies should prohibit public access
[Lambda.2] Lambda functions should use supported runtimes
[Lambda.3] Lambda functions should be in a VPC
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.2] RDS DB Instances should prohibit public access, as determined by the PubliclyAccessible AWS Configuration
[RDS.3] RDS DB instances should have encryption at-rest enabled
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.5] RDS DB instances should be configured with multiple Availability Zones
[RDS.6] Enhanced monitoring should be configured for RDS DB instances
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.9] Database logging should be enabled
[RDS.10] IAM authentication should be configured for RDS instances
[RDS.11] RDS instances should have automatic backups enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[Redshift.1] Amazon Redshift clusters should prohibit public access
[Redshift.2] Connections to Amazon Redshift clusters should be encrypted in transit
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.6] Amazon Redshift should have automatic upgrades to major versions enabled
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.2] S3 buckets should prohibit public read access
[S3.3] S3 buckets should prohibit public write access
[S3.4] S3 buckets should have server-side encryption enabled
[S3.5] S3 buckets should require requests to use Secure Socket Layer
[S3.6] S3 permissions granted to other AWS accounts in bucket policies should be restricted
[S3.7] S3 buckets should have cross-Region replication enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.9] S3 bucket server access logging should be enabled
[S3.15] S3 buckets should be configured to use Object Lock
[S3.17] S3 buckets should be encrypted at rest with AWS KMS keys
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Israel (Tel Aviv)
[ACM.1] Imported and ACM-issued certificates should be renewed after a specified time period
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.6] VPC flow logging should be enabled in all VPCs
[EC2.10] Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.4] Application Load Balancer should be configured to drop http headers
[ELB.6] Application Load Balancer deletion protection should be enabled
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ES.1] Elasticsearch domains should have encryption at-rest enabled
[ES.2] Elasticsearch domains should be in a VPC
[ES.3] Elasticsearch domains should encrypt data sent between nodes
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.1] IAM policies should not allow full "*" administrative privileges
[IAM.2] IAM users should not have IAM policies attached
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.4] IAM root user access key should not exist
[IAM.5] MFA should be enabled for all IAM users that have a console password
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.7] Password policies for IAM users should have strong AWS Configurations
[IAM.8] Unused IAM user credentials should be removed
[IAM.9] Virtual MFA should be enabled for the root user
[IAM.10] Password policies for IAM users should have strong AWS Configurations
[IAM.11] Ensure IAM password policy requires at least one uppercase letter
[IAM.12] Ensure IAM password policy requires at least one lowercase letter
[IAM.13] Ensure IAM password policy requires at least one symbol
[IAM.14] Ensure IAM password policy requires at least one number
[IAM.15] Ensure IAM password policy requires minimum password length of 14 or greater
[IAM.16] Ensure IAM password policy prevents password reuse
[IAM.17] Ensure IAM password policy expires passwords within 90 days or less
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.19] MFA should be enabled for all IAM users
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[IAM.22] IAM user credentials unused for 45 days should be removed
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.3] Amazon Redshift clusters should have automatic snapshots enabled
[Redshift.8] Amazon Redshift clusters should not use the default Admin username
[Redshift.9] Redshift clusters should not use the default database name
[S3.1] S3 Block Public Access setting should be enabled
[S3.2] S3 buckets should prohibit public read access
[S3.3] S3 buckets should prohibit public write access
[S3.4] S3 buckets should have server-side encryption enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.9] S3 bucket server access logging should be enabled
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SSM.4] SSM documents should not be public
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.1] Secrets Manager secrets should have automatic rotation enabled
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
Middle East (Bahrain)
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[Redshift.6] Amazon Redshift should have automatic upgrades to major versions enabled
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
Middle East (UAE)
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.1] Auto Scaling groups associated with a Classic Load Balancer should use load balancer health checks
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudTrail.1] CloudTrail should be enabled and configured with at least one multi-Region trail that includes read and write management events
[CloudTrail.6] Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CloudWatch.17] CloudWatch alarm actions should be activated
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DMS.1] Database Migration Service replication instances should not be public
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[EC2.1] Amazon EBS snapshots should not be publicly restorable
[EC2.3] Attached Amazon EBS volumes should be encrypted at-rest
[EC2.4] Stopped Amazon EC2 instances should be removed after a specified time period
[EC2.6] VPC flow logging should be enabled in all VPCs
[EC2.7] EBS default encryption should be enabled
[EC2.8] EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)
[EC2.12] Unused Amazon EC2 EIPs should be removed
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[EFS.1] Elastic File System should be configured to encrypt file data at-rest using AWS KMS
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.1] Application Load Balancer should be configured to redirect all HTTP requests to HTTPS
[ELB.3] Classic Load Balancer listeners should be configured with HTTPS or TLS termination
[ELB.9] Classic Load Balancers should have cross-zone load balancing enabled
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[EMR.1] Amazon Elastic MapReduce cluster master nodes should not have public IP addresses
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.1] IAM policies should not allow full "*" administrative privileges
[IAM.2] IAM users should not have IAM policies attached
[IAM.3] IAM users' access keys should be rotated every 90 days or less
[IAM.4] IAM root user access key should not exist
[IAM.5] MFA should be enabled for all IAM users that have a console password
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.8] Unused IAM user credentials should be removed
[IAM.9] Virtual MFA should be enabled for the root user
[IAM.18] Ensure a support role has been created to manage incidents with AWS Support
[IAM.19] MFA should be enabled for all IAM users
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[IAM.22] IAM user credentials unused for 45 days should be removed
[KMS.1] IAM customer managed policies should not allow decryption actions on all KMS keys
[KMS.2] IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys
[KMS.4] AWS KMS key rotation should be enabled
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.1] RDS snapshot should be private
[RDS.2] RDS DB Instances should prohibit public access, as determined by the PubliclyAccessible AWS Configuration
[RDS.3] RDS DB instances should have encryption at-rest enabled
[RDS.4] RDS cluster snapshots and database snapshots should be encrypted at rest
[RDS.5] RDS DB instances should be configured with multiple Availability Zones
[RDS.6] Enhanced monitoring should be configured for RDS DB instances
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.8] RDS DB instances should have deletion protection enabled
[RDS.11] RDS instances should have automatic backups enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[Redshift.9] Redshift clusters should not use the default database name
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.2] S3 buckets should prohibit public read access
[S3.3] S3 buckets should prohibit public write access
[S3.4] S3 buckets should have server-side encryption enabled
[S3.5] S3 buckets should require requests to use Secure Socket Layer
[S3.6] S3 permissions granted to other AWS accounts in bucket policies should be restricted
[S3.7] S3 buckets should have cross-Region replication enabled
[S3.14] S3 buckets should use versioning
[S3.15] S3 buckets should be configured to use Object Lock
[S3.17] S3 buckets should be encrypted at rest with AWS KMS keys
[SNS.1] SNS topics should be encrypted at-rest using AWS KMS
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SQS.1] Amazon SQS queues should be encrypted at rest
[SSM.1] Amazon EC2 instances should be managed by AWS Systems Manager
[SSM.2] Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation
[SSM.3] Amazon EC2 instances managed by Systems Manager should have an association compliance status of COMPLIANT
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.1] Secrets Manager secrets should have automatic rotation enabled
[SecretsManager.2] Secrets Manager secrets configured with automatic rotation should rotate successfully
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
South America (São Paulo)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[RDS.7] RDS clusters should have deletion protection enabled
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.16] RDS DB clusters should be configured to copy tags to snapshots
[RDS.24] RDS Database clusters should use a custom administrator username
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
AWS GovCloud (US-East)
[Account.1] Security contact information should be provided for an AWS account.
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.2] Amazon EC2 Auto Scaling group should cover multiple Availability Zones
[AutoScaling.3] Auto Scaling group launch configurations should configure EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)
[AutoScaling.4] Auto Scaling group launch configuration should not have a metadata response hop limit greater than 1
[AutoScaling.6] Auto Scaling groups should use multiple instance types in multiple Availability Zones
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[AutoScaling.9] Amazon EC2 Auto Scaling groups should use Amazon EC2 launch templates
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CloudWatch.17] CloudWatch alarm actions should be activated
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.1] DynamoDB tables should automatically scale capacity with demand
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[ECS.3] ECS task definitions should not share the host's process namespace
[ECS.4] ECS containers should run as non-privileged
[ECS.5] ECS containers should be limited to read-only access to root filesystems
[ECS.8] Secrets should not be passed as container environment variables
[ECS.10] ECS Fargate services should run on the latest Fargate platform version
[ECS.12] ECS clusters should use Container Insights
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.2] Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager
[ELB.8] Classic Load Balancers with SSL listeners should use a predefined security policy that has strong AWS Configuration
[ELB.10] Classic Load Balancer should span multiple Availability Zones
[ELB.12] Application Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[GuardDuty.1] GuardDuty should be enabled
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.9] Virtual MFA should be enabled for the root user
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.25] RDS database instances should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.8] Amazon Redshift clusters should not use the default Admin username
[Redshift.9] Redshift clusters should not use the default database name
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.10] S3 buckets with versioning enabled should have lifecycle policies configured
[S3.11] S3 buckets should have event notifications enabled
[S3.12] S3 access control lists (ACLs) should not be used to manage user access to buckets
[S3.13] S3 buckets should have lifecycle policies configured
[S3.14] S3 buckets should use versioning
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SSM.4] SSM documents should not be public
[SageMaker.1] Amazon SageMaker notebook instances should not have direct internet access
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
AWS GovCloud (US-West)
[Account.1] Security contact information should be provided for an AWS account.
[Account.2] AWS accounts should be part of an AWS Organizations organization
[ACM.2] RSA certificates managed by ACM should use a key length of at least 2,048 bits
[AppSync.2] AWS AppSync should have request-level and field-level logging turned on
[AutoScaling.2] Amazon EC2 Auto Scaling group should cover multiple Availability Zones
[AutoScaling.3] Auto Scaling group launch configurations should configure EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)
[AutoScaling.4] Auto Scaling group launch configuration should not have a metadata response hop limit greater than 1
[AutoScaling.6] Auto Scaling groups should use multiple instance types in multiple Availability Zones
[Autoscaling.5] Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses
[AutoScaling.9] Amazon EC2 Auto Scaling groups should use Amazon EC2 launch templates
[CloudFormation.1] CloudFormation stacks should be integrated with Simple Notification Service (SNS)
[CloudFront.1] CloudFront distributions should have a default root object configured
[CloudFront.2] CloudFront distributions should have origin access identity enabled
[CloudFront.3] CloudFront distributions should require encryption in transit
[CloudFront.4] CloudFront distributions should have origin failover configured
[CloudFront.5] CloudFront distributions should have logging enabled
[CloudFront.6] CloudFront distributions should have WAF enabled
[CloudFront.7] CloudFront distributions should use custom SSL/TLS certificates
[CloudFront.8] CloudFront distributions should use SNI to serve HTTPS requests
[CloudFront.9] CloudFront distributions should encrypt traffic to custom origins
[CloudFront.10] CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins
[CloudFront.12] CloudFront distributions should not point to non-existent S3 origins
[CloudFront.13] CloudFront distributions should use origin access control
[CloudWatch.15] CloudWatch alarms should have an action configured for the ALARM state
[CloudWatch.16] CloudWatch log groups should be retained for at least 1 year
[CloudWatch.17] CloudWatch alarm actions should be activated
[CodeBuild.1] CodeBuild GitHub or Bitbucket source repository URLs should use OAuth
[CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
[CodeBuild.3] CodeBuild S3 logs should be encrypted
[CodeBuild.4] CodeBuild project environments should have a logging AWS Configuration
[CodeBuild.5] CodeBuild project environments should not have privileged mode enabled
[DocumentDB.2] Amazon DocumentDB clusters should have an adequate backup retention period
[DynamoDB.1] DynamoDB tables should automatically scale capacity with demand
[DynamoDB.3] DynamoDB Accelerator (DAX) clusters should be encrypted at rest
[DynamoDB.4] DynamoDB tables should be present in a backup plan
[ECR.1] ECR private repositories should have image scanning configured
[ECR.2] ECR private repositories should have tag immutability configured
[ECR.3] ECR repositories should have at least one lifecycle policy configured
[ECS.1] Amazon ECS task definitions should have secure networking modes and user definitions.
[ECS.3] ECS task definitions should not share the host's process namespace
[ECS.4] ECS containers should run as non-privileged
[ECS.5] ECS containers should be limited to read-only access to root filesystems
[ECS.8] Secrets should not be passed as container environment variables
[ECS.10] ECS Fargate services should run on the latest Fargate platform version
[ECS.12] ECS clusters should use Container Insights
[EFS.2] Amazon EFS volumes should be in backup plans
[EFS.3] EFS access points should enforce a root directory
[EFS.4] EFS access points should enforce a user identity
[EKS.2] EKS clusters should run on a supported Kubernetes version
[EKS.1] EKS cluster endpoints should not be publicly accessible
[ElastiCache.1] ElastiCache for Redis clusters should have automatic backups scheduled
[ElastiCache.2] Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters
[ElastiCache.3] ElastiCache for Redis replication groups should have automatic failover enabled
[ElastiCache.4] ElastiCache for Redis replication groups should be encrypted at rest
[ElastiCache.5] ElastiCache for Redis replication groups should be encrypted in transit
[ElastiCache.6] ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH
[ElastiCache.7] ElastiCache clusters should not use the default subnet group
[ELB.10] Classic Load Balancer should span multiple Availability Zones
[ELB.12] Application Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.13] Application, Network and Gateway Load Balancers should span multiple Availability Zones
[ELB.14] Classic Load Balancer should be configured with defensive or strictest desync mitigation mode
[ELB.16] Application Load Balancers should be associated with an AWS WAF web ACL
[ES.4] Elasticsearch domain error logging to CloudWatch Logs should be enabled
[ElasticBeanstalk.1] Elastic Beanstalk environments should have enhanced health reporting enabled
[ElasticBeanstalk.2] Elastic Beanstalk managed platform updates should be enabled
[ElasticBeanstalk.3] Elastic Beanstalk should stream logs to CloudWatch
[IAM.6] Hardware MFA should be enabled for the root user
[IAM.9] Virtual MFA should be enabled for the root user
[IAM.21] IAM customer managed policies that you create should not allow wildcard actions for services
[Kinesis.1] Kinesis streams should be encrypted at rest
[Lambda.5] VPC Lambda functions should operate in more than one Availability Zone
[NetworkFirewall.3] Network Firewall policies should have at least one rule group associated
[NetworkFirewall.4] The default stateless action for Network Firewall policies should be drop or forward for full packets
[NetworkFirewall.5] The default stateless action for Network Firewall policies should be drop or forward for fragmented packets
[NetworkFirewall.6] Stateless Network Firewall rule group should not be empty
[Opensearch.1] OpenSearch domains should have encryption at rest enabled
[Opensearch.2] OpenSearch domains should be in a VPC
[Opensearch.3] OpenSearch domains should encrypt data sent between nodes
[Opensearch.4] OpenSearch domain error logging to CloudWatch Logs should be enabled
[Opensearch.5] OpenSearch domains should have audit logging enabled
[Opensearch.6] OpenSearch domains should have at least three data nodes
[Opensearch.7] OpenSearch domains should have fine-grained access control enabled
[Opensearch.8] Connections to OpenSearch domains should be encrypted using TLS 1.2
[RDS.12] IAM authentication should be configured for RDS clusters
[RDS.13] RDS automatic minor version upgrades should be enabled
[RDS.14] Amazon Aurora clusters should have backtracking enabled
[RDS.15] RDS DB clusters should be configured for multiple Availability Zones
[RDS.24] RDS Database clusters should use a custom administrator username
[RDS.25] RDS database instances should use a custom administrator username
[RDS.26] RDS DB instances should be covered by a backup plan
[RDS.27] RDS DB clusters should be encrypted at rest
[Redshift.7] Redshift clusters should use enhanced VPC routing
[Redshift.8] Amazon Redshift clusters should not use the default Admin username
[Redshift.9] Redshift clusters should not use the default database name
[Redshift.10] Redshift clusters should be encrypted at rest
[S3.1] S3 Block Public Access setting should be enabled
[S3.8] S3 Block Public Access setting should be enabled at the bucket-level
[S3.10] S3 buckets with versioning enabled should have lifecycle policies configured
[S3.11] S3 buckets should have event notifications enabled
[S3.12] S3 access control lists (ACLs) should not be used to manage user access to buckets
[S3.13] S3 buckets should have lifecycle policies configured
[S3.14] S3 buckets should use versioning
[SNS.2] Logging of delivery status should be enabled for notification messages sent to a topic
[SSM.4] SSM documents should not be public
[SageMaker.2] SageMaker notebook instances should be launched in a custom VPC
[SageMaker.3] Users should not have root access to SageMaker notebook instances
[SecretsManager.3] Remove unused Secrets Manager secrets
[SecretsManager.4] Secrets Manager secrets should be rotated within a specified number of days
[StepFunctions.1] Step Functions state machines should have logging turned on
[WAF.1] AWS WAF Classic Global Web ACL logging should be enabled
[WAF.2] A WAF Regional rule should have at least one condition
[WAF.3] A WAF Regional rule group should have at least one rule
[WAF.4] A WAF Regional web ACL should have at least one rule or rule group
[WAF.6] A WAF global rule should have at least one condition
[WAF.7] A WAF global rule group should have at least one rule
[WAF.8] A WAF global web ACL should have at least one rule or rule group
[WAF.10] A WAFv2 web ACL should have at least one rule or rule group
[WAF.11] AWS WAFv2 web ACL logging should be activated
